<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ad">

	<sql id="paging">
	    <![CDATA[
	    LIMIT #{start}, #{end}
	    ]]>
	</sql>
	
	
    <!-- 사용자 조회(5명으로 한정 최신가입자순으로 메인 관리자 페이지에서 보여주는거)-->
    <select id="users_list" resultType="users">
     	<![CDATA[
        SELECT * FROM (
            SELECT u.*, ROWNUM as rnum
            FROM (
                SELECT * FROM users
                where is_deleted = 0
                ORDER BY regdate DESC
            ) u
            WHERE ROWNUM <= 5
        )
        WHERE rnum >= 1 
        ]]>
        <!-- 아마 가입할때 최신가입순으로 저장해서 그걸 가지고 오는게 맞을지도? 나중에 확인 -->
    </select>

    <!-- 사용자 블락 처리 -->
    <update id="user_block" parameterType="int" >
        update users set is_deleted = 1 where u_idx = #{u_idx}
    </update>

    <!-- 사용자 디테일 페이지 전체 조회 -->
    <select id="users_detail_list" resultType="users">
	   SELECT * FROM users
	</select>
    
    
    <!-- 사용자 상태에 따라 조회 -->
    <select id="user_status" parameterType="int" resultType="users">
        SELECT * FROM users WHERE is_approved = #{is_approved}
    </select>
    
    <!-- 사용자 검색 -->
    <select id="search_user" parameterType="java.util.Map" resultType="users">
    	SELECT * FROM users 
    	WHERE email LIKE '%' || #{search} || '%'
    </select>
    
    <!-- 사용자 수 계산 -->
<!--    <select id="user_count" parameterType="java.util.Map" resultType="int">
    SELECT COUNT(*) 
    FROM users
    <where>
        is_approved 값이 0 또는 1일 때 필터링 조건을 적용
        is_approved가 2일 때는 필터링 조건을 적용하지 않아서 where절에 안들어와서 전체 조회
        <if test="is_approved != 2">
            <choose>
                <when test="is_approved == 0">
                    is_approved LIKE '%' || #{is_approved} || '%'
                </when>
                <when test="is_approved == 1">
                    is_approved LIKE '%' || #{is_approved} || '%'
                </when>
                'is_approved != 0 AND is_approved != 1' 이며 'is_approved = 2'일 경우는 전체 조회
            </choose>
        </if> 
    </where>
	</select> -->
    
    <!-- 사용자 유사검색  -->
    <select id="users_detail_list_search" parameterType="java.util.Map" resultType="users">
    	SELECT * 
			FROM (
    			SELECT 
        		RANK() OVER (ORDER BY u_idx DESC) AS no, u.*
    			FROM USERS u
				WHERE  
				 u.email LIKE '%'|| #{email} ||'%'
		) subquery 
		
    
    </select>
    
    
    
    
    
</mapper>







